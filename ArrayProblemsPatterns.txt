1. Scan from both sides:
 Example: StockProfit III
   Scan from left to right to find the maximum profit from 0th pos to ith pos  
   Scan from right to left to find the maximum profit from ith pos to rightmost
   Go through two arrays one more time to get max(max, arr1[i]+arr2[i])
Build two tables in exchange of time! Reduce the time to O(N).
This method works because we want to get two sum and arr1 does not overlap with arr2 at pos i
O(N^2) method calls stockI 2n times and each time stockI traverse half of the array on average.

2. Consecutive sum
Example:

Balanced String (string formed of 0 and 1, find the longest string contains the same number of 0 and 1)

0 increment 1
1 decrement 1 (equivalent to add -1)
Add from the beging to the end of array
If two positions have the same sum, the balanced string happens [prev+1, latter] 
The length = latter-prev
Two steps:
(1).add from the beging to the end of array
(2).scan the sum array from left to right, build hash table<sum, firstAppearPos> and update max(max,pos-firstAppearPos)

3. index transform

Example: 

First missing positive integer 

Solution: mapping value to index  n to nth index

4. Expand from center
Example:

Longest consecutive sequence and longest palindrome 

 
